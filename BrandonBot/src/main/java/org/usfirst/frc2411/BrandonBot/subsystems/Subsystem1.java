// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2411.BrandonBot.subsystems;


import org.usfirst.frc2411.BrandonBot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import org.usfirst.frc2411.BrandonBot.OI;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Subsystem1 extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Spark speedController1;
    private Spark speedController2;
    private RobotDrive robotDrive21;
    public OI interf = new OI();


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Subsystem1() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        speedController1 = new Spark(0);
        addChild("Speed Controller 1",speedController1);
        speedController1.setInverted(false);
        

        speedController2 = new Spark(1);
        addChild("Speed Controller 2",speedController2);
        speedController2.setInverted(false);
        
        robotDrive21 = new RobotDrive(speedController1, speedController2);
        
        robotDrive21.setSafetyEnabled(true);
        robotDrive21.setExpiration(0.1);
        robotDrive21.setSensitivity(0.5);
        robotDrive21.setMaxOutput(1.0);

        robotDrive21.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    


    @Override
    public void periodic() {
        double leftSpeed = interf.controller.getRawAxis(1);
        double rightSpeed = interf.controller.getRawAxis(5);

        if (Math.abs(leftSpeed) > .1){
            speedController1.set(leftSpeed);
        }
        if (Math.abs(rightSpeed) > .1){
            speedController2.set(rightSpeed);
        }

        // Put code here to be run every loop
        
        // System.out.println(String.valueOf(interf.right.getY()));
        
        // System.out.println(String.valueOf(interf.right.getRawAxis(0)));
        // System.out.println(String.valueOf(interf.right.getRawAxis(1)));
        // System.out.println(String.valueOf(interf.right.getRawAxis(2)));
        // System.out.println(String.valueOf(interf.right.getRawAxis(3)));
        // System.out.println(String.valueOf(interf.right.getRawAxis(4)));
        // System.out.println(String.valueOf(interf.right.getRawAxis(5)));
        // System.out.println(interf.left.getName());
        // System.out.println(interf.right.getName());
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

